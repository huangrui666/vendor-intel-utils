From 94b15f67491a65fbc11e4ec9716f28372a0646f5 Mon Sep 17 00:00:00 2001
From: Huang Rui <rui1.huang@intel.com>
Date: Mon, 17 Apr 2023 18:04:01 +0800
Subject: [PATCH] Convert specific formats to standard fourcc.

Tracked-On: OAM-105783
Change-Id: I82513f589b5b6336d57d607ebae5484968f41abd
Signed-off-by: Huang Rui <rui1.huang@intel.com>
---
 cros_gralloc/cros_gralloc_driver.cc         |  5 +++++
 cros_gralloc/cros_gralloc_driver.h          |  2 ++
 cros_gralloc/gralloc4/CrosGralloc4Mapper.cc |  3 ++-
 drv.c                                       | 20 ++++++++++++++++++++
 drv.h                                       |  2 ++
 i915.c                                      |  3 +++
 6 files changed, 34 insertions(+), 1 deletion(-)

diff --git a/cros_gralloc/cros_gralloc_driver.cc b/cros_gralloc/cros_gralloc_driver.cc
index 63d2367..1a95eca 100644
--- a/cros_gralloc/cros_gralloc_driver.cc
+++ b/cros_gralloc/cros_gralloc_driver.cc
@@ -717,6 +717,11 @@ uint32_t cros_gralloc_driver::get_resolved_drm_format(uint32_t drm_format, uint6
 	return drv_resolve_format(drv, drm_format, usage);
 }
 
+uint32_t cros_gralloc_driver::get_resolved_common_drm_format(uint32_t drm_format)
+{
+	return drv_resolved_common_drm_format(drm_format);
+}
+
 cros_gralloc_buffer *cros_gralloc_driver::get_buffer(cros_gralloc_handle_t hnd)
 {
 	/* Assumes driver mutex is held. */
diff --git a/cros_gralloc/cros_gralloc_driver.h b/cros_gralloc/cros_gralloc_driver.h
index bc3a46f..815490c 100644
--- a/cros_gralloc/cros_gralloc_driver.h
+++ b/cros_gralloc/cros_gralloc_driver.h
@@ -48,6 +48,8 @@ class cros_gralloc_driver
 
 	uint32_t get_resolved_drm_format(uint32_t drm_format, uint64_t usage);
 
+    uint32_t get_resolved_common_drm_format(uint32_t drm_format);
+
 	void for_each_handle(const std::function<void(cros_gralloc_handle_t)> &function);
 
 	bool is_kmsro_enabled()
diff --git a/cros_gralloc/gralloc4/CrosGralloc4Mapper.cc b/cros_gralloc/gralloc4/CrosGralloc4Mapper.cc
index dd22227..a851ffa 100644
--- a/cros_gralloc/gralloc4/CrosGralloc4Mapper.cc
+++ b/cros_gralloc/gralloc4/CrosGralloc4Mapper.cc
@@ -473,7 +473,8 @@ Return<void> CrosGralloc4Mapper::get(cros_gralloc_handle_t crosHandle,
         PixelFormat pixelFormat = static_cast<PixelFormat>(crosHandle->droid_format);
         status = android::gralloc4::encodePixelFormatRequested(pixelFormat, &encodedMetadata);
     } else if (metadataType == android::gralloc4::MetadataType_PixelFormatFourCC) {
-        status = android::gralloc4::encodePixelFormatFourCC(crosHandle->format, &encodedMetadata);
+        uint32_t format = mDriver->get_resolved_common_drm_format(crosHandle->format);
+        status = android::gralloc4::encodePixelFormatFourCC(format, &encodedMetadata);
     } else if (metadataType == android::gralloc4::MetadataType_PixelFormatModifier) {
         status = android::gralloc4::encodePixelFormatModifier(crosHandle->format_modifier,
                                                               &encodedMetadata);
diff --git a/drv.c b/drv.c
index c306025..5365051 100644
--- a/drv.c
+++ b/drv.c
@@ -691,6 +691,26 @@ uint32_t drv_resolve_format(struct driver *drv, uint32_t format, uint64_t use_fl
 	return format;
 }
 
+uint32_t drv_resolved_common_drm_format(uint32_t format)
+{
+    uint32_t ret = format;
+    switch (format) {
+            case DRM_FORMAT_NV12_Y_TILED_INTEL:
+            case DRM_FORMAT_FLEX_YCbCr_420_888:
+            case DRM_FORMAT_FLEX_IMPLEMENTATION_DEFINED:
+                    ret = DRM_FORMAT_NV12;
+                    drv_log("drv_resolved_common_drm_format: DRM_FORMAT_NV12");
+                    break;
+            case DRM_FORMAT_YVU420_ANDROID:
+                    ret = DRM_FORMAT_YVU420;
+					drv_log("drv_resolved_common_drm_format: DRM_FORMAT_YVU420");
+                    break;
+            default:
+                    break;
+    }
+    return ret;
+}
+
 uint32_t drv_num_buffers_per_bo(struct bo *bo)
 {
 	uint32_t count = 0;
diff --git a/drv.h b/drv.h
index 34146ec..5cefa81 100644
--- a/drv.h
+++ b/drv.h
@@ -180,6 +180,8 @@ uint32_t drv_stride_from_format(uint32_t format, uint32_t width, size_t plane);
 
 uint32_t drv_resolve_format(struct driver *drv, uint32_t format, uint64_t use_flags);
 
+uint32_t drv_resolved_common_drm_format(uint32_t format);
+
 size_t drv_num_planes_from_format(uint32_t format);
 
 size_t drv_num_planes_from_modifier(struct driver *drv, uint32_t format, uint64_t modifier);
diff --git a/i915.c b/i915.c
index fd0d4e8..107e4b6 100644
--- a/i915.c
+++ b/i915.c
@@ -584,6 +584,9 @@ static int i915_bo_compute_metadata(struct bo *bo, uint32_t width, uint32_t heig
 #endif
 		bo->meta.tiling = I915_TILING_Y;
 		break;
+	case I915_FORMAT_MOD_4_TILED:
+		bo->meta.tiling = I915_TILING_4;
+		break;
 	}
 
 	bo->meta.format_modifiers[0] = modifier;
-- 
2.25.1

